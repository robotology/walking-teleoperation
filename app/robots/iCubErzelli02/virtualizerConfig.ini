name            virtualizer
period          0.05

# Minimum angular error to trigger the rotation of the robot (value in radians)
angle_deadzone        0.4

#Minimum walking velocity to send a reference to the robot (value in meters per second)
speed_deadzone        0.5

# RPC options
playerOrientationPort_name    /playerOrientation:o
robotOrientationPort_name     /robotOrientation:i
goalWalkingPort_name           /goal:o
scale_X                       10.0
scale_Y                       2.0

# For the y reference velocity, use the ring velocity instead of the angular error between the ring and the robot orientation
y_use_ring_velocity           false

# Use the head the turn while walking
use_head_for_turning          false

# Connect to the transform server and publish the virtualizer orientation and height
use_transform_server          false

[RING_VELOCITY]
#The dimension of the moving average window to compute the ring velocity
moving_average_window         5
#Value below which the velocity is considered zero
velocity_deadzone             0.1
#Value that multiplies the filtered velocity to compute the corresponding lateral reference
velocity_scaling              5.0
#Angle threshold to consider the operator still
angle_threshold_still_rad     0.17
#Angle threshold to consider the operator moving
angle_threshold_moving_rad    0.5
#Time threshold to consider the operator still
time_threshold_moving_s       1.0
#Use only the sign of the ring velocity, multiplied times velocity_scaling, to compute the relative velocity
use_sign_only                 false
#Time duration is seconds where the output is kept constant equal to velocity scaling after the operator starts moving
jammed_moving_time_s          0.0
#Angle in rad that the robot has to cover when the operator starts moving. The lateral output is kept equal to the velocity scaling until then
jammed_moving_robot_angle_rad 0.0

[HEAD_CONTROL]
# The name of the robot, used for the port prefixes
robot                         icub
# Remote control board name to connect to the neck
remote_control_board          head
# The name of the neck joint
neck_yaw_name                 neck_yaw
# True if the direction of the yaw axis is up, i.e. a positive angle makes the robot looking left
yaw_axis_points_up            true
# Scale from the neck yaw to the reference in the lateral direction (the encoder is in degrees)
neck_yaw_scaling              0.05
#Value below which the neck is considered straight (the value is in degrees)
neck_yaw_deadzone             15.0
#Use only the head to turn while walking
use_only_head_to_turn         false

[TF]
# The name of the root frame inside the transform server
root_frame_name               virtualizer_root
# The name of the virtualizer frame inside the transform server
frame_name                    virtualizer_frame
